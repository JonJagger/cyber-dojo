
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  make sure the new home page looks ok if the browser shows it
  in various sizes after doing CTL+ and CTL-
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  There should be a dependency on the language manifest file
  only for startup. Once started a kata should have a *copy* of
  the manifest. Eg, I edit the manifest's highlight_filenames settings
  it should affects only those katas started after the edit.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  add in example of each primitive useable in the unit-test-framework
  chosen. As an example see the starting test code for James' cpputest.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  is make_manifest in test_helper.rb used anywhere anymore?
  move app/lib/Choose.language into app/models/Languages?
  move app/lib/Choose.exercise into app/models/Exercises?
  move app/lib/Folders.id_complete into app/models/Katas.complete(id) ?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  application_controller does this...
    def root_path
      Rails.root.to_s + (ENV['CYBERDOJO_TEST_ROOT_DIR'] ? '/test/cyberdojo/' : '/')
    end
  make it so root_path is always set via ENV far from shell.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  prune_large.rb and prune_small.rb rework to used Dojo.each function
  Dojo.create_kata(manifest)
    add 2nd parameter specifying format, no default, on call use "rb"
  ...
  app_lib/Choose methods -> Dojo methods
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Revert and fork javascript is virtually identical.
  ...
  Can i18n yml files be split?
  ...
  Exception_controller_test.rb needs some assertions!
  ...
  Rename css files,
    eg forker->forker_dialog
    eg reverter->reverter_dialog
    eg diff->diff_dialog
    don't forget to update application.css.scss
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  It would be simpler if output and instructions were not mixed
  into kata.language and avatar.setup did an explicit
  save(kata.exercise.instructions)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Check for uses of system('x') and `x` that should
  also have an external class representation
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -




In app/models/avatar.rb
#
# idea is that instead of doing this
#     @git = Thread.current[:git] || DiskGit.new
# I do this...
#     @git = Thread.current[:newDiskGit].call(dir)
# and the outer context does this
#     Thread.current[:newDiskGit] = Proc.new{|dir| new DiskGit(dir)}
# or in tests, does this...
#     Thread.current[:newDiskGit] = Proc.new{|dir| new MockGit(dir)}
#
# This also means that the root_dir does not have to be
# passed into the kata/avatar/sandbox objects
# and is instead held in the external DiskGit object
# which seems much more cohesive.
#
# If doing this on DiskFile check out the symlink() function though

In test/installation/one_language_checker.rb
# currently get_filename_42() uses an algorithm to find the
# the file to change to verify red/amber/green status from
# the code-output-parser. This doesn't work for some
# test frameworks such as Ruby-cucumber because they have
# multiple files containing 42.
# Perhaps explicitly pass in the filename containing the 42
# to be peturbed as an argument?

Ensuring cyber-dojo.sh cleans up any processes is messy. Instead of
trying to find children by walking pid/ppid hierarchy it would be
better to use pgid - process group. See lib/Files.rb
Note, if you're running under apache then this never seems to be
a problem - does apache auto clean processes?
-----
Pressing the test button in the browser sometimes creates a new
traffic-light but the output you get back gets stuck and does
not reflect edits made to the files. A work-around when this happens
is to reopen the URL in a new tab.
-----
Do I need to do io_locks? Suppose there is a conflict. Could this
simply mean the git commit fails with a merge conflict? I think
not, since at the moment the avatar/sandbox folder is deleted
before each commit. But if a merge conflict could be created it
would open up the possibility of having multiple players all
playing as the same avatar. There could also be conflicts in the
sandbox where the tests are run. Perhaps that is the place to
check for conflicts?
-----
On my Mac (10.7.4) using Firefox (18.0.1) using a local server
(http://localhost:3000) when you load a file and move the cursor
position using the mouse-pad then the texarea becomes readonly
(and the mac beeps at me)????
Repeatable on the cyber-dojo live server in Firefox.
Doesn't happen on Chrome on my Mac.
Doesn't happen on Safari on my Mac.
Doesn't happen on Opera on my Mac.
Doesn't happen on Jakub's mac using Firefox.
Seems to be a problem local to me.
------------
It would be simpler if output and instructions were not mixed
into kata.language and avatar.setup did an explicit
save(kata.exercise.instructions)
-----
kata.dir should probably return a dir with a / catenated to the end.
  This would simplify lines 10,26,74 (and probably more in exercises and languages)
-----
avatar.dir should probably return a dir with a / catenated to the end.
  This would simplify line 80
-----
rename fork to branch?
-----
Edit help dialog needs to show fork icon. Or the word fork now that the
  overly subtle fork-icon has been dropped.
-----
Opening file when you start is the output file and it says something like
  "please wait... initial code and tests have been submitted to the server..."
-----
The starting test file should explicitly say that the initial code
  is always the same for all exercises and just gives a very simple
  example of how to write a test. It should also explain that the red
  amber green status relies on the test format used so that should not
  be changed. Again be explicit. Eg in the C++ tests using assert it
  should say "the red-amber-green status determination relies on the
  output being the output from assert. So don't change that. Keep using
  assert.
-----
Suppose I record the ip-address of each animal in a dojo and have a
  kata/edit heartbeat that maintains the ip-address timestamp.
  This will allow me to only offer animals to resume-from when those
  animals are not themselves already being used.
  However, this raises the possibility of the following scenario.
  o) laptop1 starts as hippo
  o) laptop1 suspends (eg folds laptop screen down)
  o) laptop2 resumes as hippo (its ip-address now the hippo's)
  o) laptop1 unsuspends, and its heartbeat now detects that
    it is no longer the hippo.
  So not sure I need this.
Hitting fork button brings up dialog box (which will ultimately have
  ability to move files between visible and hidden sections)
-----
in the diff view, long lines no longer get truncated but the scrolled
  into view portion has lost its red/green colouring.
  Also when scrolling, the line numbers
  are scrolled out of view. Ideally, the line numbers would remain
  in place like they do in the main edit-test page.
-----
put a readme.txt file into the kata's root folder explaining
  how to do diffs on the unzipped zip.
-----
add help button (screen cast?) for diff page
-----
add help button (screen cast?) for dashboard page
-----
commonality in dialogs with only ok button? with only cancel button?
-----
make new-file dialog ask for inital name?
-----
isolate make new-file and rename-file dialogs and put into dedicated
  dialog js files.
-----
java-cucumber fails test/installation_tests.rb
-----
add tip to dashboard that setting secs_per_column to 999999
  collapses the columns into 1 if you want to see a non-spaced
  timeline of traffic lights.
-----
The Click-to-revert tip could appear when the current-traffic-light-count
  disappears (and disappear when it reappears). This would also mean
  you don't get the 'Click to revert' tip when there is only one
  traffic-light (which is kind of pointless).
-----
increments should be renamed to traffic_lights. And traffic_lights
  should become a model.
-----
Now that the traffic-lights offer reverting, it makes sense to allow
  you to revert from any traffic-light. Yet only enough to fit on the
  top row are shown. Perhaps the top row can hold all the
  traffic-lights but is auto-scrolled to the far right after the tests
  have finished. And they could be scrollable, even though there is no
  scrollbar. Or maybe simply offer a < > navigation in the revert dialog.
-----
Offer the fork button on the main edit-test page?
-----
I'm not seeing horizontal or vertical scrollbars
  for long lines in Safari
-----
traffic-light tool tips need some tlc
  in particular reverted traffic-lights should mention the
  traffic-light number they themselves reverted to.
  And they don't need to mention 'traffic-lights' - you can
  see they are traffic lights. Maybe say something like
  'deer has hit test 34 times and is currently at green'
-----
the dashboard traps carriage-returns on the secs_per_columns and
  maximum_columns text fields and makes a post call. It could
  parse the text field to verify it is an integer first before
  posting (like the diff page does for the was_tag and now_tag
  text fields)
-----
I'd like the rightmost column of avatar images on the dashboard
  to not scroll off screen. But at the same time I'd also like
  the time-moving traffic-lights to update (to the avatar image's
  left) every 10 seconds.
-----
allow initial manifest.rb setup of initial exercise/language to
  contain subfolders. Do I need this? Could it already be done
  with links?
-----
once a dojo has been created it should be independent of the
  initial language filesets it was created from.
  For example, you should be able to rename a languages sub-folder
  and a dojo created from it before the rename should be ok.
-----
sort filenames so filenames with no . in them are grouped together
  and filenames with one or more . in them are grouped together?
sort filenames so files with the same extension are grouped together?
-----
diff-filename-click cycles to the next diff but it loses the current red/green
  toggling states
-----
in diff page when you go back to a file with diff it should not cycle to next
  diff change it should only cycle to next diff change if you click the filename
  when the filename is already selected.
-----
in firefox clicking on the ova hyperlink in the sources dialog doesn't start a download
-----
In lib/CodeOutputParser.rb...
if a player creates a cyber-dojo.sh file which runs two or more
test files then it's possible that the output will contain the
strings denoting red and green traffic-lights. Because of this the
regex's should test for a red traffic-light first, and for
a green traffic-light second.
Also CodeOutputParser.rb with its function parse() should be
renamed based on what it does from the outside rather than
from the inside - namely it simply determines the traffic
light colour. Maybe something like
module TrafficLight
  def self.colour(unit_test_framework, output)
    ...
  end
end
-----
the various uses of eval in the ruby code could do with being replaced with
a json parse.
-----
The intention with the installation tests is that they are used to determine
what languages are installed and to only offer those languages (at the create
page). But at the moment all the languages are being offered.
-----
Getting Objective-C compiling on Ubuntu
http://www.gnustep.org/
-----
Install scala on Ubuntu
http://wiki.summercode.com/how_to_install_scala_on_ubuntu_scala_2_8_1_and_ubuntu_10_04
http://www.scala-lang.org/downloads
http://blog.cingusoft.org/install-scala-on-mac-os-x
-----
